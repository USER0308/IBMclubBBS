先是尝试使用session保存用户登陆期间的会话信息,后来改用django.contrib.auth认证系统来管理,在sign_up的时候创建auth的User(只有作为用户名的邮箱和密码两项数据),login的时候直接调用自带的认证方法来检验帐号密码,再调用login()在数据库的session写入相关数据,维持会话信息,logout的时候调用自带的logout方法结束会话,为了防止自己写的login函数和logout函数与自带的login函数,logout函数同名,把自己写的加上_view后缀,由于在Member_Model中保存有明文的密码以及Login_Form中的clean相关函数对邮箱和密码进行比对,后面又通过认证系统对帐号密码相匹配,两次验证没有必要,决定(但还没完成)将密码项从Member_Model中删除,由认证系统管理密码
增加了只包含header和footer的模板,模板风格为
______________________
|____________________|
| ___  ______  ____  |
| |  | |    |  |  |  |
| |  | |    |  |  |  |
| |__| |    |  |__|  |
|      |____|        |
|____________________|
|____________________|

增加了logout的路由,
进入主页后显示个人的一些信息,增加了修改信息的路由以及修改信息的页面
对部分需要登录后才能访问和修改的页面比如主页,修改信息页面增加了认证系统中的@login_required修饰符
